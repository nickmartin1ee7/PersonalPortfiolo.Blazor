@using PersonalPortfiolo.Blazor.Models
@using PersonalPortfiolo.Blazor.Models.GitHub
@inject HttpClient _httpClient

@if (_isLoading)
{
    <div class="spinner"></div>
}
else
{
    <div class="alert alert-secondary mt-4">
        <h2>@_repos!.Length GitHub Repos</h2>
        <table>
            <thead>
                <tr align="center">
                    <th>Project Name</th>
                    <th>Stars</th>
                    <th>Language</th>
                    <th>Last Updated</th>
                    <th>Project Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var repo in _repos
                    .OrderByDescending(repo => repo.Description.Contains("#featured", StringComparison.InvariantCultureIgnoreCase))
                    .ThenByDescending(repo => repo.StargazersCount)
                    .ThenByDescending(repo => repo.UpdatedAt))
                    {
                        <tr style="outline: thin solid" align="center">
                            <td><a class="font-weight-bold link-dark" href="@repo.HtmlUrl">@repo.Name</a></td>
                            <td>@repo.StargazersCount</td>
                            <td>@repo.Language</td>
                            <td>@repo.UpdatedAt</td>
                            <td>@repo.Description</td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
}

@code
{
    [Parameter]
    public string? ProfileApiUri { get; set; }

    [Parameter]
    public string? ProfileUri { get; set; }

    private bool _isLoading = true;
    private Repo[]? _repos;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(ProfileUri))
            throw new ArgumentNullException(nameof(ProfileUri));

        if (string.IsNullOrEmpty(ProfileApiUri))
            throw new ArgumentNullException(nameof(ProfileApiUri));

        _repos = await _httpClient.GetFromJsonAsync<Repo[]>(ProfileApiUri);

        _isLoading = false;
    }
}